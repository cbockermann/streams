/**
 * 
 */
package stream.test;

import stream.Data;
import stream.Processor;

/**
 * @author chris
 *
 */
public class ThrowException implements Processor {

    Integer every = 1;
    int count = 0;

    /*
     * (non-Javadoc)
     * 
     * @see stream.Processor#process(stream.Data)
     */
    @Override
    public Data process(Data input) {

        count++;

        if (count % every == 0) {
            throw new SyntheticException("Synthetic error generated by test-processor!");
        }

        return input;
    }

    /**
     * @return the every
     */
    public Integer getEvery() {
        return every;
    }

    /**
     * @param every
     *            the every to set
     */
    public void setEvery(Integer every) {
        this.every = every;
    }

    public static class SyntheticException extends RuntimeException {
        private static final long serialVersionUID = -3159348772303010705L;

        public SyntheticException(String msg) {
            super(msg);
        }
    }
}